The main feature provided by an Operating system for the processes is the time-sharing:
The OS creates the illusion of having many CPUs by virtualizing the CPU : run one process for a while, then stop it, run another one for the same amount of time , stop it and so on. With this the OS can promote the illusion that many virtual CPUs exist when in fact there is only one physical CPU (or a few).


The possible states of a process are :
- Running : A process is running on a processor. This means it's executing instructions.
- Ready : A process is ready to run but for some reason the OS has chosen not to run it at this given moment.
- Ready out of the memory
- Blocked : A process has performed some kind of operation that makes it not ready to run until some other event takes place.
- Blocked out of the memory
- Zombie : Final state where it has exited but has not been cleaned up yet.

The decisions are taken by the OS scheduler.

An operating system must have some APIs to manage processes : 
- Create : methods to create/start new processes (e.g: double click on a program, call the fork method)
- Destroy : kill/close a process when not responding/done.
- Wait : wait for a process to stop running.
- Miscellaneous control : suspend/resume a process
- Status : how long it has run for, or what state it is in, etc.


